@using System.Drawing.Text
@inject CowTreatmentService CowTreatmentService
@inject MedicineService MedicineService

<MudDialog>
    <DialogContent>
        <div style="height: 100%; overflow-y: scroll;">
            <MudTable T="int" Items="_medicines" @bind-SelectedItems="_selectedMedicines" MultiSelection="true" SelectionChangeable="true" Striped="true" SelectOnRowClick="true" >
                <HeaderContent>
                    <MudTh><MudTableSortLabel SortBy="new Func<int, object>(x=>MedicineService.GetMedicineNameById(x))">Name</MudTableSortLabel></MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="Name">@MedicineService.GetMedicineNameById(context)</MudTd>
                </RowTemplate>
            </MudTable>
        </div>
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Primary" OnClick="CloseDialog">Schlie√üen</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; }
    
    [Parameter]
    public List<int> Medicines { get; set; } = [];
    
    private List<int> _medicines = [];
    private HashSet<int> _selectedMedicines = [];
    
    protected override async Task OnInitializedAsync()
    {
        _medicines = MedicineService.Medicines.Keys.ToList();
        Medicines = !Medicines.Any() ? _medicines : Medicines;
        foreach (var entry in Medicines)
        {
            _selectedMedicines.Add(entry);
        }
    }

    private void CloseDialog()
    {
        MudDialog.Close(DialogResult.Ok(_selectedMedicines));
    }
}