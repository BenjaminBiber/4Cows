@inject CowService CowService
@inject MedicineService MedicineService
@inject CowTreatmentService CowTreatmentService

<MudTable Elevation="5" Items="@Cows" Hover="true" Striped="@true" Filter="(Func<Cow, bool>)FilterFunc1">
    <ToolBarContent>
        <MudSpacer/>
        <MudTextField T="string" @bind-value="cowSearchString" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh><MudTableSortLabel SortBy="new Func<Cow, object>(x=>x.CollarNumber)">Halsbandnummer</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<Cow, object>(x=>x.EarTagNumber)">Ohrmarkennummer</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<Cow, object>(x=>x.IsGone)">Im Betrieb</MudTableSortLabel></MudTh>
       </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Halsbandnummer">@CowService.GetCollarNumberByEarTagNumber(context.EarTagNumber)</MudTd>
        <MudTd DataLabel="Ohrmarkennummer">@context.EarTagNumber</MudTd>
        <MudTd DataLabel="Im Betrieb">@context.IsGone</MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager RowsPerPageString="Behandlungen pro Seite" PageSizeOptions="new int[]{25, 50, 100}" />
    </PagerContent>
</MudTable>
@code {
    private IEnumerable<Cow> Cows = new List<Cow>();
    private string cowSearchString = "";
    private bool FilterFunc1(Cow CowTreatment) => FilterFunc(CowTreatment, cowSearchString);

    private bool FilterFunc(Cow CowTreatment, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (CowService.GetCollarNumberByEarTagNumber(CowTreatment.EarTagNumber).ToString() == searchString)
            return true;
        return false;
    }

    protected override async Task OnInitializedAsync()
    {
        await CowTreatmentService.GetAllDataAsync();
        Cows = CowService.Cows.Values;
    }
}