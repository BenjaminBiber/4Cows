@using _4Cows_FE.Components._4CowsComponent.Dialogs
@inject CowService CowService
@inject MedicineService MedicineService
@inject CowTreatmentService CowTreatmentService
@inject IDialogService DialogService
@inject WhereHowService WhereHowService

<MudTable Elevation="5" Dense="true" Items="@CowTreatments" Hover="true" Striped="@true" Filter="(Func<CowTreatment, bool>)FilterFunc1">
    <ToolBarContent>
        <MudSpacer/>
        <MudTextField T="string" @bind-value="cowSearchString" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh><MudTableSortLabel SortBy="new Func<int, object>(x=>x)">Halsbandnummer</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<CowTreatment, object>(x=>x.EarTagNumber)">Ohrmarkennummer</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<CowTreatment, object>(x=>x.AdministrationDate)">Datum</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<CowTreatment, object>(x=>x.MedicineId)">Medikament</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<CowTreatment, object>(x=> WhereHowService.GetWhereHowNameById(x.WhereHowId))">Wie/Wo</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<CowTreatment, object>(x=>x.MedicineDosage)">Menge</MudTableSortLabel></MudTh>

    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Halsbandnummer">@CowService.GetCollarNumberByEarTagNumber(context.EarTagNumber)</MudTd>
        <MudTd DataLabel="Ohrmarkennummer">@context.EarTagNumber</MudTd>
        <MudTd DataLabel="Datum">@context.AdministrationDate</MudTd>
        <MudTd DataLabel="Medikament">@MedicineService.GetMedicineNameById(context.MedicineId)</MudTd>
        <MudTd DataLabel="Wie/Wo">@WhereHowService.GetWhereHowNameById(context.WhereHowId)</MudTd>
        <MudTd DataLabel="Menge">@context.MedicineDosage</MudTd>
        <MudButton Size="Size.Small" Variant="Variant.Filled" OnClick="@(() => DeleteCowTreatment(context))" StartIcon="@Icons.Material.Filled.Delete" Color="Color.Error">Behandlung Löschen</MudButton>

    </RowTemplate>
    <PagerContent>
        <MudTablePager RowsPerPageString="Behandlungen pro Seite" PageSizeOptions="new int[]{25, 50, 100}" />
    </PagerContent>
</MudTable>
@code {
    private IEnumerable<CowTreatment> CowTreatments = new List<CowTreatment>();
    private string cowSearchString = "";
    private bool FilterFunc1(CowTreatment CowTreatment) => FilterFunc(CowTreatment, cowSearchString);

    private bool FilterFunc(CowTreatment CowTreatment, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (CowService.GetCollarNumberByEarTagNumber(CowTreatment.EarTagNumber).ToString() == searchString)
            return true;
        return false;
    }

    protected override async Task OnInitializedAsync()
    {
        await CowTreatmentService.GetAllDataAsync();
        CowTreatments = CowTreatmentService.Treatments.Values.OrderByDescending(x => x.AdministrationDate);
    }
    
    private async Task DeleteCowTreatment(CowTreatment CowTreatment)
    {
        var options = new DialogOptions { MaxWidth = MaxWidth.Medium, FullWidth = true, NoHeader = true };
        var parametersGeneric = new DialogParameters<GenericDialog> { { x => x.HeaderText, "Löschen" }, { x => x.Description, "Wollen Sie die Behandlung wirklich Löschen?" }, { x => x.AcceptButtonText, "Ja" }, { x => x.CancelButtonText, "Nein" }, { x => x.ColorScheme, Color.Error } };
        var dialog = await DialogService.ShowAsync<GenericDialog>("",parametersGeneric, options);
        var result = await dialog.Result;
        if (!result.Canceled)
        {
            await CowTreatmentService.DeleteDataAsync(CowTreatment.CowTreatmentId);
            await CowTreatmentService.GetAllDataAsync();
            CowTreatments = CowTreatmentService.Treatments.Values.OrderByDescending(x => x.AdministrationDate);
        }
    }
}