@page "/Klauen_Daten"
@inject IDialogService DialogService
@using BB_Cow.Components
@using BB_Cow.Components.Dialogs
@inject ClawTreatmentService clawTreatmentService
<MudGrid Justify="Justify.FlexEnd">
    <MudIconButton Icon="@Icons.Material.Filled.AddCircle" Color="Color.Secondary" Size="Size.Large" OnClick="OpenClawDialog"></MudIconButton>
</MudGrid>
<MudSpacer></MudSpacer>
<MudText Typo="Typo.h3">Klauen Behandlungen</MudText>

<MudTable Elevation="5" Items="@Treatment_Claws" Hover="true" Striped="@true" Filter="new Func<Treatment_Claw,bool>(ClawFilterFunc1)" @bind-SelectedItem="selectedClaw">
    <ToolBarContent>
        <MudSpacer />
        <MudTextField @bind-Value="searchClaw" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Halsbandnummer</MudTh>
        <MudTh>Datum</MudTh>
        <MudTh></MudTh>

    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Halsbandnummer">@context.Collar_Number</MudTd>
            <MudTd DataLabel="Datum">@context.Treatment_Date</MudTd>
            <MudTd><MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="@(() => OpenClawInformation(context))">Behandlung öffnen</MudButton></MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager RowsPerPageString="Behandlungen pro Seite" PageSizeOptions="new int[]{25, 50, 100}" />
        </PagerContent>
    </MudTable>
@code {
    private Treatment_Claw selectedClaw = null;
    private string searchClaw = "";
    private IEnumerable<Treatment_Claw> Treatment_Claws = new List<Treatment_Claw>();

    protected override async Task OnInitializedAsync()
    {
        await clawTreatmentService.GetAllDataAsync();
        Treatment_Claws = clawTreatmentService.Treatments;
    }
    private bool ClawFilterFunc1(Treatment_Claw Treatment_Cow) => FilterFuncClaw(Treatment_Cow, searchClaw);

    private bool FilterFuncClaw(Treatment_Claw Treatment_Cow, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (Treatment_Cow.Collar_Number.ToString() == searchString)
            return true;
        return false;
    }

    private async Task OpenClawInformation(Treatment_Claw Claw_Treatment)
    {
        var options = new DialogOptions { CloseOnEscapeKey = true, CloseButton = true, MaxWidth = MaxWidth.Medium, FullWidth = true };
        await clawTreatmentService.GetAllDataAsync();
        var parameters = new DialogParameters<Show_Claw_Treatment_Dialog> { { x => x.Claw_Treatment, Claw_Treatment } };
        DialogService.Show<Show_Claw_Treatment_Dialog>("", parameters, options);
    }

    private void OpenClawDialog()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true, CloseButton = true, MaxWidth = MaxWidth.Medium, FullWidth = true };
        DialogService.Show<Add_Claw_Treatment_Dialog>("", options);
    }
}
